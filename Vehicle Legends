repeat wait() until game:IsLoaded() wait()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton1(Vector2.new(9e9,9e9))
end)


local function GetCar()
    local Target
    for i, v in ipairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if v.ClassName == "Model" and v.Name == game.Players.LocalPlayer.Name.."'s Car" then
            Target = v
        end
    end
    return Target
end

hookfunction((gcinfo or collectgarbage), function(...)
    if getgenv().Memory then
     return math.random(200,350) -- memory check
   end 
end)
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(...)
    local Args = {...}
    local Self = Args[1]
    if getnamecallmethod() == "Kick" and  getgenv().Kick then
            return nil
    end
    return OldNameCall(...)
end)

local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/jakepscripts/moonlib/main/moonlibv2.lua'))()
local main = library:CreateWindow("BatHubV3 | Vehicle Legends", "#8C63D1", 9160626035)

main:CreateTab("Main")

main:CreateLabel("Main", "Main Features")

main:CreateToggle("Main", "AutoFarm", "Test", function(State)
    Red = State
while wait() and Red do

            for i = 1, 50 do
                if Red then
                wait()
                game:GetService("VirtualInputManager"):SendKeyEvent(true, "W", false, uwu)
                end
        end
            GetCar():SetPrimaryPartCFrame(CFrame.new(0, -26, 0))
            wait(2)

end end)
if GetCar() then
getgenv().a = require(GetCar():WaitForChild("StaticTune"))
end

main:CreateSlider("Main", "MaxSteerRadius", "Only numbers", 0, 100, function(Value)
    a.MaxSteerRadius = Value
end)

main:CreateSlider("Main", "SteerSpeed", "Only numbers", 0, 100, function(Value)
    a.SteerSpeed = Value
    a.SteerSpeedReturn = Value
end)
main:CreateSlider("Main", "RelaxTorque", "Only numbers", 0, 100, function(Value)
    a.RelaxTorque = Value
end)
main:CreateSlider("Main", "HandbrakeTorque", "Only numbers", 0, 100, function(Value)
    a.HandbrakeTorque = Value
end)
main:CreateSlider("Main", "MaxRPM", "Only numbers", 0, 100, function(Value)
    a.MaxRPM = Value
end)
    
